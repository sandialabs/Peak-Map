<!--/********************************************************************************************************************************************************************************************************************************************************                          
NOTICE:

For five (5) years from 1/21/2020 the United States Government is granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable worldwide license in this data to reproduce, prepare derivative works, and perform 
publicly and display publicly, by or on behalf of the Government. There is provision for the possible extension of the term of this license. Subsequent to that period or any extension granted, the United States Government is granted for itself
and others acting on its behalf a paid-up, nonexclusive, irrevocable worldwide license in this data to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so. The
specific term of the license can be identified by inquiry made to National Technology and Engineering Solutions of Sandia, LLC or DOE.
 
NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR NATIONAL TECHNOLOGY AND ENGINEERING SOLUTIONS OF SANDIA, LLC, NOR ANY OF THEIR EMPLOYEES, MAKES ANY WARRANTY, 
EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD
NOT INFRINGE PRIVATELY OWNED RIGHTS.
 
Any licensee of this software has the obligation and responsibility to abide by the applicable export control laws, regulations, and general prohibitions relating to the export of technical data. Failure to obtain an export control license or other 
authority from the Government may result in criminal liability under U.S. laws.
 
                                             (End of Notice)
*********************************************************************************************************************************************************************************************************************************************************/-->


<Window x:Class="PeakMapWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PeakMapWPF"
        mc:Ignorable="d"  
        x:Name="MainWindowView"
        DragEnter="Window_DragEnter"
        local:FileDragDropService.FileDragDropTarget="{Binding}" 
        local:FileDragDropService.IsFileDragDropEnabled="True">
    <Window.Resources>
        <DiscreteObjectKeyFrame x:Key="FlagKey" Value="{Binding MenuItemVisibility}" />
        <Style TargetType="local:MainWindow">
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Icon" Value="icon.ico"/>
            <Setter Property="AllowDrop" Value="True"/>
            <Setter Property="Title" Value="Peak Map"/>
            <Setter Property="Width" Value="{Binding WindowWidth, Mode=TwoWay}"/>
            <Setter Property="Height" Value="800"/>
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#ff901a" Opacity="50"/>
            </Style.Resources>
            <!--<Setter Property="DataContext" Value="{Binding CurrentModeViewModel}"/>-->
            <!--<Style.Triggers>
                <DataTrigger debug:TriggerTracing.TriggerName="CurrentModeLibrary"
                             debug:TriggerTracing.TraceEnabled="True"
                    Binding="{Binding CurrentMode}"  Value="library">
                    <Setter Property="Width" Value="500"/>
                    <Setter Property="MinWidth" Value="500"/>
                </DataTrigger>
                <DataTrigger debug:TriggerTracing.TriggerName="CurrentModeMatching"
                             debug:TriggerTracing.TraceEnabled="True"
                    Binding="{Binding CurrentMode}"  Value="matching">
                    <Setter Property="Width" Value="1200"/>
                    <Setter Property="MinWidth" Value="1000"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Gesture="" Key="I" Modifiers="Ctrl" Command="{Binding FileMenuCommand}" CommandParameter="Open Input"/>
        <KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding FileMenuCommand}" CommandParameter="Close Input"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding FileMenuCommand}" CommandParameter="Open Library"/>
        <KeyBinding Key="N" Modifiers="Ctrl" Command="{Binding FileMenuCommand}" CommandParameter="New Library"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding FileMenuCommand}" CommandParameter="save Library"/>

        <KeyBinding Key="W" Modifiers="Ctrl" Command="{Binding LinesMenuCommand}" CommandParameter="Write All"/>
        <KeyBinding Key="M" Modifiers="Ctrl" Command="{Binding LinesMenuCommand}" CommandParameter="Write Matched"/>
        <KeyBinding Key="H" Modifiers="Ctrl" Command="{Binding LinesMenuCommand}" CommandParameter="Write Selected"/>
        <KeyBinding Key="Insert" Command="{Binding LinesMenuCommand}" CommandParameter="Write"/>
        <!--<KeyBinding Key="S" Modifiers="Ctrl" Command="{x:Static commands:PeakMapCommands.SaveLibraryCmd}"/>
        <KeyBinding Key="F4" Modifiers="Alt" Command="Close"/>

        <KeyBinding Key="Insert" Modifiers="CTRL" Command="{x:Static commands:PeakMapCommands.WriteCmd}"/>
        <KeyBinding Key="A" Modifiers="CTRL" Command="{x:Static commands:PeakMapCommands.WriteAllCmd}"/>
        <KeyBinding Key="M" Modifiers="CTRL" Command="{x:Static commands:PeakMapCommands.WriteMatchedCmd}"/>
        <KeyBinding Key="S" Modifiers="CTRL" Command="{x:Static commands:PeakMapCommands.WriteSelectedCmd}"/>
        <KeyBinding Key="Y" Modifiers="CTRL" Command="{x:Static commands:PeakMapCommands.WriteYieldCmd}"/>-->

        <KeyBinding Key="F5" Command="{Binding ModeCommand}" CommandParameter="{Binding ElementName=MainWindowView}"/>
    </Window.InputBindings>
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*" />
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" >
            <MenuItem Header="_File">
                <MenuItem x:Name="OpenInpMenuItem" Header="Open _Input..." 
                          AutomationProperties.HelpText="Open Spectra to import data" 
                          Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=OpenInpMenuItem, Path=Header}"
                          InputGestureText="CTRL+I" />
                <MenuItem x:Name="CloseInpMenuItem" Header="_Close Input" 
                          Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=CloseInpMenuItem, Path=Header}"
                          AutomationProperties.HelpText="Close current Spectra" 
                          InputGestureText="CTRL+C"/>
                <Separator/>
                <MenuItem x:Name="NewLibMenuItem" Header="_New Library..." 
                          Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=NewLibMenuItem, Path=Header}"
                          AutomationProperties.HelpText="Create a new Library" 
                          InputGestureText="CTRL+N"/>
                <MenuItem x:Name="OpenLibMenuItem" Header="_Open Library..." 
                           Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=OpenLibMenuItem, Path=Header}"
                          AutomationProperties.HelpText="Open existing Spectra" 
                          InputGestureText="CTRL+O"/>
                <MenuItem x:Name="SaveLibMenuItem" Header="_Save Library" 
                          Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=SaveLibMenuItem, Path=Header}"
                          AutomationProperties.HelpText="save the working library" 
                          InputGestureText="CTRL+S"/>
                <MenuItem x:Name="SaveAsLibMenuItem" Header="Save Library _As..." 
                          Command="{Binding FileMenuCommand}" CommandParameter="{Binding ElementName=SaveAsLibMenuItem, Path=Header}"
                          AutomationProperties.HelpText="Save the working library as"/>
                <Separator/>
                <MenuItem x:Name="ExitLibMenuItem" Header="_Exit" 
                          Command="{Binding ExitCommand}" CommandParameter="{Binding ElementName=MainWindowView}"
                          AutomationProperties.HelpText="Exit the application" 
                          InputGestureText="ALT+F4"/>
            </MenuItem>
            <MenuItem Header="_Lines">
                <MenuItem x:Name="WriteSelMenuItem" Header="Write _Selected" 
                          Command="{Binding LinesMenuCommand}" CommandParameter="{Binding ElementName=WriteSelMenuItem, Path=Header}"
                          IsCheckable="True" IsChecked="{Binding IsWriteSelChecked}"
                          AutomationProperties.HelpText="Write slected lines" 
                          InputGestureText="CTRL+H"/>
                <MenuItem x:Name="WriteMatchedMenuItem" Header="Write _Matched" 
                          Command="{Binding LinesMenuCommand}" CommandParameter="{Binding ElementName=WriteMatchedMenuItem, Path=Header}"
                          IsCheckable="True" IsChecked="{Binding IsWriteMatchedChecked}"
                          AutomationProperties.HelpText="Write matched lines" 
                          InputGestureText="CTRL+M"/>
                <MenuItem x:Name="WriteAllMenuItem" Header="Write _All" 
                          Command="{Binding LinesMenuCommand}" CommandParameter="{Binding ElementName=WriteAllMenuItem, Path=Header}"
                          IsCheckable="True" IsChecked="{Binding IsWriteAllChecked}"
                          AutomationProperties.HelpText="Write all displayed lines" 
                          InputGestureText="CTRL+W"/>
                <Separator/>
                <MenuItem x:Name="WriteMenuItem" Header="_Write" 
                          Command="{Binding LinesMenuCommand}" CommandParameter="write"
                          AutomationProperties.HelpText="Write via the selected method" 
                          InputGestureText="Insert"/>
				<Separator/>
				<MenuItem x:Name="NoWtMeanMenuItem" Header="_X-Ray No Wt Mean"
                          IsCheckable="True" IsChecked="{Binding IsNoWtMeanChecked}"
                          AutomationProperties.HelpText="Mark x-rays for excluison in activity calculations"/>
            </MenuItem>
            <MenuItem Header="_Settings">
                <MenuItem x:Name="MatchingSettingsMenuItem" Header="_Matching..."  
                          Command="{Binding SettingsMenuCommand}" CommandParameter="{Binding ElementName=MatchingSettingsMenuItem, Path=Header}"/>
                <MenuItem x:Name="SpectralSettingsMenuItem" Header="_Spectral..." 
                           Command="{Binding SettingsMenuCommand}" CommandParameter="{Binding ElementName=SpectralSettingsMenuItem, Path=Header}"/>
                <MenuItem x:Name="LibrarySettingsMenuItem" Header="_Library..." 
                           Command="{Binding SettingsMenuCommand}" CommandParameter="{Binding ElementName=LibrarySettingsMenuItem, Path=Header}"/>
                <Separator/>
                <MenuItem Header="Change Mo_de"
                          Command="{Binding ModeCommand}" CommandParameter="{Binding ElementName=MainWindowView}"
                          AutomationProperties.HelpText="Change the mode" 
                          InputGestureText="F5">
                    
                    <!--<MenuItem x:Name="MatchingModeMenuItem" Header="_Matching" 
                            
                              AutomationProperties.HelpText="Change to matching mode" 
                              InputGestureText="F5"/>

                    <MenuItem x:Name="LibraryModeMenuItem" Header="_Library" 
                               Command="{Binding ModeCommand}" CommandParameter="library"
                              AutomationProperties.HelpText="Change to library mode" 
                              InputGestureText="F6"/>-->
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Advanced">
                <MenuItem x:Name="RebuildDBMenuItem" Header="_Rebuild Library Database..." 
                         Command="{Binding OtherMenuCommands}" CommandParameter="{Binding ElementName=RebuildDBMenuItem, Path=Header}"/>
            </MenuItem>
            <MenuItem Header="_Help">
                <MenuItem x:Name="HelpMenuItem" Header="_About" 
                          Command="{Binding OtherMenuCommands}" CommandParameter="{Binding ElementName=HelpMenuItem, Path=Header}"/>
            </MenuItem>
        </Menu>
        <ContentControl Grid.Row="2" Grid.Column="1" Content="{Binding CurrentModeViewModel}"/>
    </Grid>

   

</Window>
