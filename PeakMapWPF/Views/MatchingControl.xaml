<!--/********************************************************************************************************************************************************************************************************************************************************                          
NOTICE:

For five (5) years from 1/21/2020 the United States Government is granted for itself and others acting on its behalf a paid-up, nonexclusive, irrevocable worldwide license in this data to reproduce, prepare derivative works, and perform 
publicly and display publicly, by or on behalf of the Government. There is provision for the possible extension of the term of this license. Subsequent to that period or any extension granted, the United States Government is granted for itself
and others acting on its behalf a paid-up, nonexclusive, irrevocable worldwide license in this data to reproduce, prepare derivative works, distribute copies to the public, perform publicly and display publicly, and to permit others to do so. The
specific term of the license can be identified by inquiry made to National Technology and Engineering Solutions of Sandia, LLC or DOE.
 
NEITHER THE UNITED STATES GOVERNMENT, NOR THE UNITED STATES DEPARTMENT OF ENERGY, NOR NATIONAL TECHNOLOGY AND ENGINEERING SOLUTIONS OF SANDIA, LLC, NOR ANY OF THEIR EMPLOYEES, MAKES ANY WARRANTY, 
EXPRESS OR IMPLIED, OR ASSUMES ANY LEGAL RESPONSIBILITY FOR THE ACCURACY, COMPLETENESS, OR USEFULNESS OF ANY INFORMATION, APPARATUS, PRODUCT, OR PROCESS DISCLOSED, OR REPRESENTS THAT ITS USE WOULD
NOT INFRINGE PRIVATELY OWNED RIGHTS.
 
Any licensee of this software has the obligation and responsibility to abide by the applicable export control laws, regulations, and general prohibitions relating to the export of technical data. Failure to obtain an export control license or other 
authority from the Government may result in criminal liability under U.S. laws.
 
                                             (End of Notice)
*********************************************************************************************************************************************************************************************************************************************************/-->


<UserControl x:Class="PeakMapWPF.Views.MatchingControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PeakMapWPF.Views"
             mc:Ignorable="d" 
             xmlns:views="clr-namespace:PeakMapWPF.Views"
             d:DesignHeight="450" d:DesignWidth="1000">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1.7*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

            <DataGrid x:Name="PeaksGrid"  Margin="0,0,5,0"   Grid.Column="0" Grid.Row="0" Grid.RowSpan="4"
            ItemsSource="{Binding Path=Peaks,Mode=TwoWay}"
            AutoGenerateColumns="False" 
            SelectedItem="{Binding Path=SelectedPeak, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static CollectionView.NewItemPlaceholder}}" 
            IsReadOnly="{Binding IsInputUser}" SelectionMode="Single" Style="{StaticResource DataGridStyle}">
            <DataGrid.Columns>
                <DataGridTextColumn Header="No." Binding="{Binding Path=ID, StringFormat=F0}" Width="auto"/>
                <DataGridTextColumn Header="Energy" Binding="{Binding Path=ENERGY, Mode=TwoWay, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="FWHM" Binding="{Binding Path=FWHM, Mode=TwoWay,StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Area" Binding="{Binding Path=AREA, Mode=TwoWay,StringFormat=E3}" Width="*"/>
                <DataGridTextColumn Header="Continuum" Binding="{Binding Path=CONTINUUM, Mode=TwoWay, StringFormat=E3}" Width="*"/>
                <DataGridTextColumn Header="Id" Binding="{Binding Path=MATCHNAME}" Width="1.2*"/>
            </DataGrid.Columns>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow" BasedOn="{StaticResource RowHighlights}">
                    <!--<Style.Resources>
                        <SolidColorBrush  x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"  Opacity="50"/>
                        <SolidColorBrush  x:Key="{x:Static SystemColors.}" Color="#ff901a" Opacity="50"/>
                    </Style.Resources>-->
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding TENTATIVEMATCH}" Value="True">
                            <Setter Property="Background" Value="#FFe6cc"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding TENTATIVEMATCH}" Value="False">
                            <Setter Property="Background" Value="White"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu ItemsSource="{Binding SelectedPeakContextItems}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="Command" Value="{Binding Action}"/>
                            <Setter Property="CommandParameter" Value="{Binding Name}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </DataGrid.ContextMenu>
            
        </DataGrid>

            <DataGrid x:Name="MatchedNuclidesGrid" Grid.Row="0" Grid.Column="1" Margin="5,0,0,2" IsReadOnly="True"
                  ItemsSource="{Binding Path=Nuclides,Mode=OneWay}" 
                  SelectedItem="{Binding Path=SelectedNuclide, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" 
                  AutoGenerateColumns="False"  
                  Style="{DynamicResource DataGridStyle}" >
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Path=NAME}" Width="*"/>
                <DataGridTextColumn Header="Score" Binding="{Binding Path=SCORE, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Nuclide" Binding="{Binding Path=NUCLIDE}" Width="*"/>
                <DataGridTextColumn Header="Half-Life" Binding="{Binding Path=HALF_LIFE,StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Unit" Binding="{Binding Path=HALF_LIFE_UNIT}" Width="auto"/>
                <DataGridTextColumn Header="Energy" Binding="{Binding Path=ENERGY, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Yield" Binding="{Binding Path=YIELD, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Path=TYPE}" Width="auto"/>
                <DataGridTextColumn Header="Difference" Binding="{Binding Path=DIFFERENCE, StringFormat=F2}" Width="*"/>
            </DataGrid.Columns>

        </DataGrid>
        <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
            <TextBlock Text="Line Match Score:"  Margin="5,0,0,2"/>
            <TextBlock Text="{Binding LineMatchScore, StringFormat=P3}" Grid.Row="4" Grid.Column="2" Margin="5,0,0,2"/>
        </StackPanel>
        <Expander x:Name="LineFilterExp" Grid.Row="2" Grid.Column="1" Header="Line Filters" Margin="5,0,0,5">
            <WrapPanel Orientation="Horizontal">
                <CheckBox x:Name="DaughterCheckBox" IsChecked="{Binding DaughtersFilter, Mode=TwoWay}" Content="Daughter Lines" Margin="10"/>
                <CheckBox x:Name="XRayCheckBox" IsChecked="{Binding GammaFilter, Mode=TwoWay}" Content="x-Rays" Margin="10" />
                <CheckBox x:Name="γRayCheckBox" IsChecked="{Binding XRayFilter, Mode=TwoWay}" Content="γ-Rays" Margin="10"/>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Lower Enegy Cutoff (keV)" Margin="10,10,2.5,10"/>
                    <TextBox x:Name="LEnergyCutoffText" Width="60" Margin="2.5,10,10,10" 
                             Text="{Binding LowerEnergy, Mode=TwoWay}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Upper Enegy Cutoff (keV)" Margin="10,10,2.5,10"/>
                    <TextBox x:Name="UEnergyCutoffText" Width="60" Margin="2.5,10,10,10"
                             Text="{Binding UpperEnergy, Mode=TwoWay}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Lower Yield Cutoff (%)" Margin="10,10,2.5,10"/>
                    <TextBox x:Name="YieldCutoffText" Width="60" Margin="2.5,10,10,10"
                             Text="{Binding LowerYield, Mode=TwoWay}"/>
                </StackPanel>
            </WrapPanel>
        </Expander>
        <views:CustomDataGrid x:Name="MatchedLinesGrid" Grid.Row="3" Grid.Column="1" Margin="5,0,0,0" IsReadOnly="True"
                  ItemsSource="{Binding Lines}" SelectionMode="Extended" 
                  SelectedItemsList="{Binding SelectedLines, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                  AutoGenerateColumns="False" Style="{StaticResource DataGridStyle}">
            <DataGrid.RowDetailsTemplate>
                <DataTemplate>
                    <TextBlock Background="#FFe6cc"  TextWrapping="Wrap" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Run Text="Inteferences: "/>
                        <Run Text="{Binding INTERFERENCES}"/>
                    </TextBlock>
                </DataTemplate>
            </DataGrid.RowDetailsTemplate>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Energy" Binding="{Binding Path=ENERGY,StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Yield (%)" Binding="{Binding Path=YIELD, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Type" Binding="{Binding Path=TYPE}" Width="Auto"/>
                <!--<DataGridTextColumn Header="Efficiency (%)" Binding="{Binding EFFICIENCY, StringFormat=E3}" Width="*"/>-->
                <DataGridTextColumn Header="Area (cts)" Binding="{Binding AREA, StringFormat=E3}" Width="Auto"/>
                <DataGridTextColumn Header="MDA (cts)" Binding="{Binding MDA, StringFormat=E3}" Width="Auto"/>
                <DataGridCheckBoxColumn Header="Area > MDA" Binding="{Binding GTRMDA, Mode=OneWay}" Width="SizeToHeader"/>
                <DataGridCheckBoxColumn Header="Matched" Binding="{Binding MATCHED}" Width="*"/>
                <DataGridTextColumn Header="Peak No." Binding="{Binding PEAKNUM, StringFormat=F0}" Width="*"/>
                <DataGridTextColumn Header="Diff" Binding="{Binding DIFFERENCE, StringFormat=F2}" Width="*"/>
                <DataGridTextColumn Header="Rel. Activity" Binding="{Binding RELACTIVITY, StringFormat=E3}" Width="SizeToHeader"/>
                <DataGridTextColumn Header="Nuclide" Binding="{Binding Path=NAME}" Width="*"/>
            </DataGrid.Columns>
            <DataGrid.ContextMenu>
                <ContextMenu ItemsSource="{Binding SelectedLinesContextItems}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Header" Value="{Binding Name}"/>
                            <Setter Property="Command" Value="{Binding Action}"/>
                            <Setter Property="CommandParameter" Value="{Binding Name}"/>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                </ContextMenu>
            </DataGrid.ContextMenu>
        </views:CustomDataGrid>
        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
            <TextBlock Text="{Binding Path=InputFile, Mode=OneWay, StringFormat='Input File: {0}'}" Margin="0,0,20,0"/>
            <TextBlock Text="{Binding Path=LibraryFile, Mode=OneWay, StringFormat='Library File: {0}'}" Margin="20,0,20,0"/>
        </StackPanel>
    </Grid>
</UserControl>
